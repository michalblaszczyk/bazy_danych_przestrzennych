CREATE DATABASE s290897_spatial_db;
CREATE EXTENSION postgis;

CREATE TABLE budynki(id SERIAL PRIMARY KEY, geometria GEOMETRY, nazwa VARCHAR(255));
CREATE TABLE punkty_informacyjne(id SERIAL PRIMARY KEY, geometria GEOMETRY, nazwa VARCHAR(255));
CREATE TABLE drogi(id SERIAL PRIMARY KEY, geometria GEOMETRY, nazwa VARCHAR(255));

INSERT INTO budynki(geometria, nazwa) VALUES (ST_MakeEnvelope(1.5,2.5,3.5,4), 'BuildingA');
INSERT INTO budynki(geometria, nazwa) VALUES (ST_MakeEnvelope(1,2,3,4), 'BuildingC');
INSERT INTO budynki(geometria, nazwa) VALUES (ST_MakeEnvelope(4,5,6,7), 'BuildingB');
INSERT INTO budynki(geometria, nazwa) VALUES (ST_MakeEnvelope(9,10,11,12), 'BuildingD');
INSERT INTO budynki(geometria, nazwa) VALUES (ST_MakeEnvelope(5,6,7,8), 'BuildingF');


INSERT INTO punkty_informacyjne(geometria,nazwa) VALUES('POINT(6 9.5)','K');
INSERT INTO punkty_informacyjne(geometria,nazwa) VALUES('POINT(6.5 6)','J');
INSERT INTO punkty_informacyjne(geometria,nazwa) VALUES('POINT(9.5 6)','I');
INSERT INTO punkty_informacyjne(geometria,nazwa) VALUES('POINT(1 3.5)','G');
INSERT INTO punkty_informacyjne(geometria,nazwa) VALUES('POINT(5.5 1.5)','H');


INSERT INTO drogi(geometria,nazwa) VALUES(ST_MakeLine(ST_MakePoint(7.5,0),ST_MakePoint(7.5,10.5)),'RoadY');
INSERT INTO drogi(geometria,nazwa) VALUES(ST_MakeLine(ST_MakePoint(0,4.5),ST_MakePoint(12,4.5)),'RoadX');


SELECT DISTINCT SUM(ST_Length(geometria)) FROM drogi;
SELECT ST_AsEWKT, ST_Area(geometria) FROM budynki WHERE nazwa LIKE 'BudynekA';
SELECT nazwa, ST_Area(geometria) FROM budynki ORDER BY nazwa;
SELECT nazwa, ST_Perimeter(geometria) FROM budynki ORDER BY ST_Area(geometria) DESC LIMIT 2;
SELECT ST_Distance(budynki.geometria, punkty_informacyjne.geometria) FROM budynki, punkty_informacyjne WHERE budynki.nazwa LIKE 'BuildingC' AND punkty_informacyjne.nazwa LIKE 'G';
SELECT ST_Area(ST_Intersection(ST_Buffer((SELECT geometria FROM budynki WHERE nazwa LIKE 'BuildingB'), 0.5), (SELECT geometria FROM budynki WHERE nazwa LIKE 'BuildingC')));
SELECT id, nazwa FROM budynki WHERE ST_Y(ST_Centroid(geometry)) > ST_Y(ST_PointN((SELECT geometria FROM drogi WHERE nazwa LIKE 'RoadX'), 1));
SELECT ST_Area(ST_SymDifference((SELECT geometria FROM budynki WHERE nazwa LIKE 'BuildingC'), ST_GeomFromText('POLYGON((4 7, 6 7, 6 8, 4 8, 4 7))')));
