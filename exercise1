CREATE DATABASE s290897;
CREATE SCHEMA firma;
CREATE ROLE ksiegowosc;
GRANT USAGE ON SCHEMA firma TO ksiegowosc;
GRANT SELECT ON ALL TABLES IN SCHEMA firma TO ksiegowosc;

CREATE TABLE PRACOWNICY (id_pracownika SERIAL NOT NULL, imie VARCHAR(50) NOT NULL, nazwisko VARCHAR(50) NOT NULL, adres VARCHAR(50) NOT NULL, telefon VARCHAR(20) NOT NULL);
CREATE TABLE godziny (id_godziny SERIAL NOT NULL, data DATE NOT NULL, liczba_godzin INT NOT NULL, id_pracownika INT NOT NULL);
CREATE TABLE pensja_stanowisko (id_pensji SERIAL NOT NULL, stanowisko VARCHAR(100) NOT NULL, kwota FLOAT(2) NOT NULL);
CREATE TABLE premia(id_premii SERIAL NOT NULL, rodzaj VARCHAR(50) NOT NULL, kwota FLOAT(2) NOT NULL);
CREATE TABLE wynagrodzenie(id_wynagrodzenia SERIAL NOT NULL, data DATE NOT NULL, id_pracownika INT NOT NULL, id_godziny INT NOT NULL, id_pensji INT NOT NULL, id_premii INT NOT NULL);

ALTER TABLE pracownicy ADD PRIMARY KEY (id_pracownika);
ALTER TABLE godziny ADD PRIMARY KEY (id_godziny);
ALTER TABLE pensja_stanowisko ADD PRIMARY KEY (id_pensji);
ALTER TABLE premia ADD PRIMARY KEY (id_premii);
ALTER TABLE wynagrodzenie ADD PRIMARY KEY (id_wynagrodzenia);

ALTER TABLE godziny ADD FOREIGN KEY (id_pracownika) REFERENCES pracownicy(id_pracownika);
ALTER TABLE wynagrodzenie ADD FOREIGN KEY (id_pracownika) REFERENCES pracownicy(id_pracownika);
ALTER TABLE wynagrodzenie ADD FOREIGN KEY (id_godziny) REFERENCES godziny(id_godziny);
ALTER TABLE wynagrodzenie ADD FOREIGN KEY (id_pensji) REFERENCES pensja_stanowisko(id_pensji);
ALTER TABLE wynagrodzenie ADD FOREIGN KEY (id_premii) REFERENCES premia(id_premii);

COMMENT ON TABLE pracownicy IS 'Comment 1';
COMMENT ON TABLE godziny IS 'Comment 2';
COMMENT ON TABLE pensja_stanowisko IS 'Comment 3';
COMMENT ON TABLE premia IS 'Comment 4';
COMMENT ON TABLE wynagrodzenie IS 'pensja + premia';

CREATE INDEX index_pracownicy ON pracownicy USING BTREE(id_pracownika);
CREATE INDEX index_godziny ON godziny USING BTREE(id_godziny);
CREATE INDEX index_pensja_stanowisko ON pensja_stanowisko USING BTREE(id_pensji);
CREATE INDEX index_wynagrodzenie ON wynagrodzenie USING BTREE(id_wynagrodzenia);
CREATE INDEX index_premia ON premia USING BTREE(id_premii);


UPDATE godziny SET miesiac = DATE_PART('month', data);
UPDATE godziny SET tydzien = DATE_PART('week', data);
   
INSERT INTO pracownicy(id_pracownika, imie, nazwisko, adres, telefon)
VALUES(1, 'Random', 'Nowak', 'Nowy Sacz', '345213456'),(2, 'Kasia', 'Jasia', 'Warszawa', '659874652),(3, 'Masia', 'Sasin', 'Gliwice', '856987452'),
 
ALTER TABLE godziny ADD COLUMN miesiac TYPE INT;
ALTER TABLE godziny ADD COLUMN tydzien TYPE INT;   

INSERT INTO godziny(id_godziny, data, liczba_godzin, id_pracownika)
VALUES(1, '2010-25-01', 100, 1),(2, '2010-23-01', 200, 1),(3, '2010-26-01', 300, 2),
UPDATE godziny SET miesiac = DATE_PART('month', data);
UPDATE godziny SET tydzien = DATE_PART('week', data);

INSERT INTO premia(id_premii, rodzaj, kwota)VALUES(1, '-', 0),(2, '-', 100),(3, 'wtorek', 150),

INSERT INTO pensja_stanowisko(id_pensji, stanowisko, kwota)
VALUES(1, 'tynkarz', 1234),(2, 'murarz', 11111),(3, 'akrobata', 100),

INSERT INTO wynagrodzenie(id_wynagrodzenia, data, id_pracownika, id_godziny, id_pensji, id_premii)
VALUES(1, '2010-11-11', 1, 1, 1, 2),(2, '2019-10-10', 2, 2, 1, 1),(3, '2001-11-13', 3, 3, 2, 5),

6.   
SELECT id_pracownika, nazwisko FROM pracownicy;
SELECT pracownicy.id_pracownika, kwota FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji WHERE kwota > 1000;
SELECT pracownicy.id_pracownika FROM pracownicy JOIN wynagrodzenie ON pracownicy.id_pracownika = wynagrodzenie.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji JOIN premia ON wynagrodzenie.id_premii = premia.id_premii WHERE premia.rodzaj LIKE 'brak' AND pensja_stanowisko.kwota > 2000;
SELECT * FROM pracownicy WHERE imie LIKE 'J%';
SELECT * FROM pracownicy WHERE LOWER(nazwisko) LIKE '%n%' AND imie LIKE '%a';
SELECT imie, nazwisko, liczba_godzin-160 FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN godziny ON godziny.id_godziny = wynagrodzenie.id_godziny WHERE liczba_godzin > 160;
SELECT imie, nazwisko FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji WHERE kwota >= 1500 AND kwota <= 3000;
SELECT imie, nazwisko FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN godziny ON godziny.id_godziny = wynagrodzenie.id_godziny JOIN premia ON premia.id_premii = wynagrodzenie.id_premii WHERE liczba_godzin > 160 AND rodzaj LIKE 'brak';

7.
SELECT imie, nazwisko, kwota FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji ORDER BY kwota;
SELECT imie, nazwisko, pensja_stanowisko.kwota, premia.kwota FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji JOIN premia ON premia.id_premii = wynagrodzenie.id_premii ORDER BY pensja_stanowisko.kwota ASC, premia.kwota DESC;
SELECT stanowisko, COUNT(pracownicy.id_pracownika) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji GROUP BY stanowisko;
SELECT AVG(pensja_stanowisko.kwota), MIN(pensja_stanowisko.kwota), MAX(pensja_stanowisko.kwota) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji WHERE stanowisko LIKE 'kierownik';
SELECT SUM(kwota) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji;
SELECT stanowisko, SUM(kwota) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji GROUP BY stanowisko;
SELECT stanowisko, COUNT(pracownicy.id_pracownika) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji JOIN premia ON premia.id_premii = wynagrodzenie.id_premii WHERE rodzaj NOT LIKE 'brak' GROUP BY stanowisko;
DELETE FROM pracownicy WHERE pracownicy.id_pracownika IN (SELECT pracownicy.id_pracownika FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji WHERE kwota < 1200);

8.
ALTER TABLE pracownicy ALTER COLUMN telefon TYPE VARCHAR(15);
UPDATE pracownicy SET telefon = CONCAT('+48', telefon);
UPDATE pracownicy SET telefon = CONCAT(LEFT(telefon, 3), ' ', SUBSTRING(telefon, 4, 3), '-', SUBSTRING(telefon, 7, 3), '-', RIGHT(telefon, 3));
SELECT UPPER(nazwisko) FROM PRACOWNICY ORDER BY LENGTH(nazwisko) DESC LIMIT 1;
SELECT MD5(CONCAT(pracownicy.id_pracownika, imie, nazwisko, adres, telefon, kwota)) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN pensja_stanowisko ON pensja_stanowisko.id_pensji = wynagrodzenie.id_pensji;

9.
SELECT CONCAT('Pracownik ', imie, ' ', nazwisko, ', w dniu ', godziny.data, ' otrzymal pensje calkowita na kwote ', (pensja_stanowisko.kwota + premia.kwota), ', gdzie wynagrodzenie zasadnicze wynosilo: ', pensja_stanowisko.kwota, ', premia:', premia.kwota, ', nadgodziny: ', (CASE WHEN godziny.liczba_godzin > 160 THEN 0 ELSE (160 - godziny.liczba_godzin) END)) FROM pracownicy JOIN wynagrodzenie ON wynagrodzenie.id_pracownika = pracownicy.id_pracownika JOIN godziny ON godziny.id_godziny = wynagrodzenie.id_godziny JOIN pensja_stanowisko ON wynagrodzenie.id_pensji = pensja_stanowisko.id_pensji JOIN premia ON premia.id_premii = wynagrodzenie.id_premii;
